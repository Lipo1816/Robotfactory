// <auto-generated />
using System;
using DxBlazorApplication7.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DxBlazorApplication7.Migrations
{
    [DbContext(typeof(DSDBContext))]
    partial class DSDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommonLibrary.AuthPack.UserDetails", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("UsersDetails");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.AdditionalTime", b =>
                {
                    b.Property<DateTime?>("AddTimeDate")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AddStartTime")
                        .HasMaxLength(45)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AddEndTime")
                        .HasMaxLength(45)
                        .HasColumnType("datetime2");

                    b.Property<double>("AddTime")
                        .HasMaxLength(30)
                        .HasColumnType("float");

                    b.Property<string>("AddTimeType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("ReasonType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("AddTimeDate", "OPNO", "AddStartTime", "AddEndTime");

                    b.ToTable("AdditionalTimes");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ComparisonTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("ComparisonTables");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ESOPStatus", b =>
                {
                    b.Property<string>("StationID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProcedureID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModelID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ESOPCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileSite")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("TypeGroup")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("StationID", "ProcedureID", "ModelID");

                    b.ToTable("ESOPStatuss");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.JointModuleTables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultipleJobs")
                        .HasColumnType("bit");

                    b.Property<string>("Process")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProcessType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StationNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JointModuleTables");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ManufactureStatus", b =>
                {
                    b.Property<int?>("ManufactureID")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("ManufactureName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ManufactureID", "ManufactureName");

                    b.ToTable("ManufactureStatuss");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ManufacturingProcessName", b =>
                {
                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ManufacturingProcessName");

                    b.ToTable((string)null);

                    b.ToView("ManufacturingProcessNameView", (string)null);
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ModelStatus", b =>
                {
                    b.Property<string>("ModelKey")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("ModelID")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("ModelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ModelKey", "ModelID");

                    b.ToTable("ModelStatuss");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.OP_Report", b =>
                {
                    b.Property<string>("OP1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP1");

                    b.Property<string>("OP2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP2");

                    b.Property<string>("OP3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP3");

                    b.Property<string>("OP4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP4");

                    b.Property<string>("OP5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP5");

                    b.Property<string>("OP6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP6");

                    b.Property<string>("OP7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP7");

                    b.Property<int>("ROWID")
                        .HasColumnType("int")
                        .HasColumnName("ROWID");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReceiveTime");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ResponseTime");

                    b.Property<string>("SN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SN");

                    b.Property<string>("TotalTimes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Total");

                    b.Property<string>("WO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WO");

                    b.ToTable("OP_Reports");

                    b.ToFunction("sp_OP_Report");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.OP_Report_Day", b =>
                {
                    b.Property<string>("DayTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DayTime");

                    b.Property<string>("OP1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP1");

                    b.Property<string>("OP2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP2");

                    b.Property<string>("OP3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP3");

                    b.Property<string>("OP4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP4");

                    b.Property<string>("OP5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP5");

                    b.Property<string>("OP6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP6");

                    b.Property<string>("OP7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OP7");

                    b.Property<int>("ROWID")
                        .HasColumnType("int")
                        .HasColumnName("ROWID");

                    b.Property<string>("TotalTimes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Total");

                    b.ToTable("OP_Report_Days");

                    b.ToFunction("sp_OP_ReportByDay");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.OperatorInformation", b =>
                {
                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperatorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CARDNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ability")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSPDGroup")
                        .HasColumnType("bit");

                    b.Property<string>("OperatorEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.HasKey("Department", "OperatorName", "Mail", "OPNO", "CARDNO");

                    b.ToTable("OperatorInformations");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.OvertimeSchedule", b =>
                {
                    b.Property<DateTime?>("OverTimeDate")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("OverTimeType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.HasKey("OverTimeDate", "OverTimeType", "OPNO");

                    b.ToTable("OvertimeSchedules");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ProcedureStatus", b =>
                {
                    b.Property<string>("ProcedureKey")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("ProcedureID")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IndexKey")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("ProcedureName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("StationID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ProcedureKey", "ProcedureID");

                    b.ToTable("ProcedureStatuss");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ProcessTypeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProcessType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Sorting")
                        .HasColumnType("int");

                    b.Property<string>("StationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProcessTypeTables");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.QuantityByWorkOrder_ERP", b =>
                {
                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.ToTable("QuantityByWorkOrders");

                    b.ToFunction("sp_QuantityByWorkOrder");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.ReasonType", b =>
                {
                    b.Property<string>("ReasonCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ReasonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReasonCode");

                    b.ToTable("ReasonTypes");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.SerialNumberByWorkOrder", b =>
                {
                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LineName");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderNo");

                    b.Property<string>("PP_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PP_Name");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PartName");

                    b.Property<string>("PartNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PartNo");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<string>("SerialNO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SerialNO");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StartTime");

                    b.ToTable("SerialNumberByWorkOrders");

                    b.ToFunction("sp_SerialNumberByWorkOrder");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.StationStatus", b =>
                {
                    b.Property<string>("StationKey")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("StationID")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IndexKey")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturing")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StationKey", "StationID");

                    b.ToTable("StationStatuss");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.TimePeriod", b =>
                {
                    b.Property<int?>("PeriodType")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("PeriodName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOT")
                        .HasColumnType("bit");

                    b.HasKey("PeriodType", "PeriodName");

                    b.ToTable("TimePeriods");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.TypeByWorkOrder", b =>
                {
                    b.Property<string>("ProcessType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ModelName");

                    b.ToTable("TypeByWorkOrders");

                    b.ToFunction("sp_TypeByWorkOrder");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WO_SN_Report", b =>
                {
                    b.Property<string>("AvgWorkTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvgWorkTime");

                    b.Property<DateTime>("FirstReceiveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FirstReceiveTime");

                    b.Property<DateTime>("LastResponseTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastResponseTime");

                    b.Property<string>("MaxWorkTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaxWorkTime");

                    b.Property<string>("MinWorkTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MinWorkTime");

                    b.Property<string>("OPGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OPGroup");

                    b.Property<string>("SN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SN");

                    b.Property<string>("WO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WO");

                    b.Property<int>("WorkCount")
                        .HasColumnType("int")
                        .HasColumnName("WorkCount");

                    b.Property<string>("WorkTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WorkTime");

                    b.ToTable((string)null);

                    b.ToView("WorkOrderStatisticView", (string)null);
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingData", b =>
                {
                    b.Property<DateTime?>("WorkingDate")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkingType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("WorkingID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<int?>("QTY")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkingDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WorkingGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("WorkingDate", "WorkingType", "WorkingID", "OPNO");

                    b.ToTable("WorkingDatas");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingHoursStatistic", b =>
                {
                    b.Property<int>("DiffDay")
                        .HasColumnType("int")
                        .HasColumnName("DiffDay");

                    b.Property<int>("DiffTime")
                        .HasColumnType("int")
                        .HasColumnName("DiffTime");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("OPNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OPNO");

                    b.Property<DateTime>("ReceiveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReceiveTime");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ResponseTime");

                    b.Property<string>("SeriaNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SeriaNumber");

                    b.Property<string>("WorkOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WorkOrder");

                    b.ToTable((string)null);

                    b.ToView("OperatingWorkingStatisticView", (string)null);
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingList", b =>
                {
                    b.Property<DateTime?>("WorkingTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkingID")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("WorkOrder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeriaNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("AssignTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsAssign")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPause")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReceive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsResponse")
                        .HasColumnType("bit");

                    b.Property<string>("OPName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartName")
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<string>("PartNo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("PauseTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResponseTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<double?>("WorkOrderCount")
                        .HasColumnType("float");

                    b.Property<string>("WorkingDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkingPeriod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkingTime", "WorkingID", "WorkOrder", "SeriaNumber", "OPNO");

                    b.ToTable("WorkingLists");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingOrderList", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"));

                    b.Property<DateTime?>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("FailCount")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<bool?>("IsPause")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReceive")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsResponse")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("PassCount")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<DateTime?>("PauseTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProcessType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkOrder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("WorkOrderCount")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<DateTime?>("WorkingTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("WorkingOrderLists");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingOrderStepList", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"));

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StatusTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WOID")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("WorkOrder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkingStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WorkingTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("WorkingOrderStepLists");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingStepTimeList", b =>
                {
                    b.Property<DateTime?>("WorkingTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeriaNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OPNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StatusTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("OPName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProcessDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReasonType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("WorkingDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkingStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkingTime", "WorkOrder", "SeriaNumber", "OPNO", "StatusTime");

                    b.ToTable("WorkingStepTimeLists");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingTimeDetail", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Index"));

                    b.Property<string>("OPNO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ReceiveTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResponseTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("SeriaNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkOrder")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkTime")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("WorkingTimeDetails");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingType", b =>
                {
                    b.Property<string>("TypeID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("TypeGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TypeID", "TypeName");

                    b.ToTable("WorkingTypes");
                });

            modelBuilder.Entity("DxBlazorApplication7.Data.WorkingTypeGroup", b =>
                {
                    b.Property<string>("TypeGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypeGroupName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturingProcess")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TypeGroup", "TypeGroupName");

                    b.ToTable("WorkingTypeGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
